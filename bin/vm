#!/usr/bin/env python

import argparse
import os
import subprocess
import sys
import shlex
import itertools


def chunks(it, size):
    it = iter(it)
    return iter(lambda: tuple(itertools.islice(it, size)), ())


def g(*args):
    def state_formatter(state):
        if state == 'aborted':
            return '\033[91m' + state + '\033[0m'
        if state == 'running':
            return '\033[93m' + state + '\033[0m'
        return state


    def directory_formatter(directory):
        return os.path.basename(directory)


    def default_formatter(value):
        return value


    vagrant_global_status = subprocess.Popen(
        shlex.split('vagrant global-status --machine-readable'), stdout=subprocess.PIPE)
    stdout, stderr = vagrant_global_status.communicate()

    text_content = lambda row: row[-1].strip()
    is_empty = lambda row: row.rstrip('-')

    row_size = 5
    rows = filter(is_empty, map(text_content, [s.split(',') for s in stdout.split('\n')]))
    table_rows = list(chunks(rows[:-1], row_size))

    value_formatters = {
        'directory': directory_formatter,
        'state': state_formatter
    }

    for row in map(lambda row: zip(table_rows[0], row), table_rows[1:]):
        d = {k: value_formatters.get(k, default_formatter)(v) for k, v in row}
        print '{} ({})'.format(d.get('directory'), d.get('state'))


def vm(args):
    globals().get(args.g.pop(0))(*args.g)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='A small Vagrant command post-processor', add_help=False)
    parser.add_argument('--help', action='help', help='show this help message and exit')
    parser.add_argument('g', nargs='+', help='Invoke the command with the specified name')
    vm(parser.parse_args())
